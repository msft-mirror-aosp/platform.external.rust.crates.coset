// This file is generated by cargo_embargo.
// Do not modify this file as most changes will be overridden on upgrade.
// Content before the first "rust_*" or "genrule" module is preserved.

package {
    default_applicable_licenses: ["external_rust_crates_coset_license"],
}

// Added automatically by a large-scale-change
// See: http://go/android-license-faq
license {
    name: "external_rust_crates_coset_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
    ],
    license_text: [
        "LICENSE",
    ],
}

rust_test {
    name: "coset_test_src_lib",
    host_supported: true,
    crate_name: "coset",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.7",
    srcs: ["src/lib.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    test_options: {
        unit_test: true,
    },
    edition: "2018",
    features: [
        "default",
        "std",
    ],
    rustlibs: [
        "libciborium",
        "libciborium_io",
        "libhex",
    ],
}

rust_library {
    name: "libcoset",
    host_supported: true,
    crate_name: "coset",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.7",
    srcs: ["src/lib.rs"],
    edition: "2018",
    features: [
        "default",
        "std",
    ],
    rustlibs: [
        "libciborium",
        "libciborium_io",
    ],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    product_available: true,
    vendor_available: true,
}

rust_library_rlib {
    name: "libcoset_nostd",
    crate_name: "coset",
    cargo_env_compat: true,
    cargo_pkg_version: "0.3.7",
    srcs: ["src/lib.rs"],
    edition: "2018",
    rustlibs: [
        "libciborium_io_nostd",
        "libciborium_nostd",
    ],
    apex_available: [
        "//apex_available:platform",
        "//apex_available:anyapex",
    ],
    prefer_rlib: true,
    no_stdlibs: true,
    stdlibs: [
        "liballoc.rust_sysroot",
        "libcompiler_builtins.rust_sysroot",
        "libcore.rust_sysroot",
    ],
    product_available: true,
    vendor_available: true,
}
